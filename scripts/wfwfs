#!/bin/sh
#
# To enable/install:       update-rc.d wfwfs defaults
# After modifying script:  systemctl daemon-reload

### BEGIN INIT INFO
# Provides:          wfwfs
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     3 4 5
# Default-Stop:      0 1 6
# Short-Description: WFWFS Camera Daemon and real-time r0 calculations
# Description:       WFWFS Camera Daemon and real-time r0 calculations
### END INIT INFO


# Documentation available at
# http://refspecs.linuxfoundation.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptfunc.html
# Debian provides some extra functions though
. /lib/lsb/init-functions

DAEMON_NAME="wfwfs"
DAEMON_USER="obs"
DAEMON_PATH="/usr/local/bin/wfwfs"
DAEMON_OPTS="-vv -F"
DAEMON_PWD="/data/wfwfs"
DAEMON_DESC=$(get_lsb_header_val $0 "Short-Description")
DAEMON_PID="/var/run/${DAEMON_NAME}.pid"
DAEMON_NICE=0
DAEMON_LOG='/var/log/wfwfs.log'

test -f $DAEMON_PATH || exit 0

GENICAM_ROOT=/opt/pleora/ebus_sdk/Ubuntu-x86_64/lib/genicam
if [ ! -r "$GENICAM_ROOT" ]; then
    GENICAM_ROOT=""
    echo "GENICAM_ROOT is not a valid path. WFWFS-daemon will not run."
    exit 0
fi

export GENICAM_ROOT=$GENICAM_ROOT
export GENICAM_ROOT_V3_0=$GENICAM_ROOT


[ -r "/etc/default/${DAEMON_NAME}" ] && . "/etc/default/${DAEMON_NAME}"


do_start() {

    local result

    pidofproc -p "${DAEMON_PID}" "${DAEMON_PATH}" > /dev/null
    if [ $? -eq 0 ]; then
        log_warning_msg "${DAEMON_NAME} is already started"
        result=0
    else
        log_daemon_msg "Starting ${DAEMON_DESC}" "${DAEMON_NAME}"
        touch "${DAEMON_LOG}"
        chmod u+rw "${DAEMON_LOG}"
        if [ -z "${DAEMON_USER}" ]; then
            start-stop-daemon --start --verbose --oknodo --background \
                --nicelevel $DAEMON_NICE \
                --chdir "${DAEMON_PWD}" \
                --pidfile "${DAEMON_PID}" --make-pidfile \
                --startas /bin/bash -- -c "exec $DAEMON_PATH $DAEMON_OPTS > $DAEMON_LOG 2>&1"
            result=$?
        else
            chown $DAEMON_USER "${DAEMON_LOG}"
            start-stop-daemon --start --verbose --oknodo --background \
                --nicelevel $DAEMON_NICE \
                --chdir "${DAEMON_PWD}" \
                --pidfile "${DAEMON_PID}" --make-pidfile \
                --chuid "${DAEMON_USER}" \
                --startas /bin/bash -- -c "exec $DAEMON_PATH $DAEMON_OPTS > $DAEMON_LOG 2>&1"
            result=$?
        fi
        log_end_msg $result
    fi
    
    return $result
    
}


do_stop() {

    local result

    pidofproc -p "${DAEMON_PID}" "${DAEMON_PATH}" > /dev/null
    if [ $? -ne 0 ]; then
        log_warning_msg "${DAEMON_NAME} is not started"
        result=0
    else
        log_daemon_msg "Stopping ${DAEMON_DESC}" "${DAEMON_NAME}"
        killproc -p "${DAEMON_PID}" "${DAEMON_PATH}"
        result=$?
        log_end_msg $result
        rm "${DAEMON_PID}"
    fi

    return $result

}


do_restart() {

    local result

    do_stop
    result=$?
    if [ $result = 0 ]; then
        do_start
        result=$?
    fi

    return $result

}


do_status() {

    local result

    status_of_proc -p "${DAEMON_PID}" "${DAEMON_PATH}" "${DAEMON_NAME}"
    result=$?
    tail -n 5 $DAEMON_LOG
    return $result

}


do_check() {

    local result

    pidofproc -p "${DAEMON_PID}" "${DAEMON_PATH}" > /dev/null
    if [ $? -ne 0 ]; then
        do_restart
        result=$?
    fi

    return $result

}



do_usage() {
    echo $"Usage: $0 {start | stop | restart | status | check}"
    exit 1
}


case "$1" in
start)   do_start;   exit $? ;;
stop)    do_stop;    exit $? ;;
restart) do_restart; exit $? ;;
status)  do_status;  exit $? ;;
check)   do_check;   exit $? ;;
*)       do_usage;   exit  1 ;;
esac
